<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
	<modelVersion>4.0.0</modelVersion>

	<groupId>com.kanven</groupId>
	<artifactId>record</artifactId>
	<version>1.0.1-RELEASE</version>
	<packaging>jar</packaging>

	<name>record</name>
	<url>http://maven.apache.org</url>

	<properties>
		<project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>
		<deploy.dir>${project.build.directory}/dest</deploy.dir>
		<canal.version>1.0.25</canal.version>
		<elastic.version>5.6.14</elastic.version>
		<relections.version>0.9.10</relections.version>
		<log4j2.version>2.15.0</log4j2.version>
		<slf4j.version>1.7.25</slf4j.version>
		<mockito.version>1.10.19</mockito.version>
		<zktec.version>0.11</zktec.version>
		<antlr.version>4.7.2</antlr.version>
	</properties>

	<dependencies>
		<dependency>
			<groupId>org.reflections</groupId>
			<artifactId>reflections</artifactId>
			<version>${relections.version}</version>
		</dependency>
		<dependency>
			<groupId>com.alibaba.otter</groupId>
			<artifactId>canal.common</artifactId>
			<version>${canal.version}</version>
			<exclusions>
				<exclusion>
					<groupId>org.springframework</groupId>
					<artifactId>spring</artifactId>
				</exclusion>
				<exclusion>
					<groupId>org.springframework</groupId>
					<artifactId>spring-aop</artifactId>
				</exclusion>
				<exclusion>
					<groupId>org.springframework</groupId>
					<artifactId>spring-jdbc</artifactId>
				</exclusion>
				<exclusion>
					<groupId>org.springframework</groupId>
					<artifactId>spring-orm</artifactId>
				</exclusion>
				<exclusion>
					<groupId>org.springframework</groupId>
					<artifactId>spring-context</artifactId>
				</exclusion>
			</exclusions>
		</dependency>
		<dependency>
			<groupId>com.alibaba.otter</groupId>
			<artifactId>canal.parse</artifactId>
			<version>${canal.version}</version>
			<exclusions>
				<exclusion>
					<groupId>org.springframework</groupId>
					<artifactId>spring</artifactId>
				</exclusion>
			</exclusions>
		</dependency>
		<dependency>
			<groupId>com.alibaba.otter</groupId>
			<artifactId>canal.server</artifactId>
			<version>${canal.version}</version>
			<exclusions>
				<exclusion>
					<groupId>org.springframework</groupId>
					<artifactId>spring</artifactId>
				</exclusion>
			</exclusions>
		</dependency>
		<dependency>
			<groupId>com.alibaba.otter</groupId>
			<artifactId>canal.instance.manager</artifactId>
			<version>${canal.version}</version>
			<exclusions>
				<exclusion>
					<groupId>org.springframework</groupId>
					<artifactId>spring</artifactId>
				</exclusion>
			</exclusions>
		</dependency>
		<dependency>
			<groupId>org.elasticsearch.client</groupId>
			<artifactId>transport</artifactId>
			<version>${elastic.version}</version>
		</dependency>
		<dependency>
			<groupId>org.apache.commons</groupId>
			<artifactId>commons-lang3</artifactId>
			<version>3.5</version>
		</dependency>
		<dependency>
			<groupId>com.101tec</groupId>
			<artifactId>zkclient</artifactId>
			<version>${zktec.version}</version>
		</dependency>
		<dependency>
		    <groupId>org.antlr</groupId>
		    <artifactId>antlr4-runtime</artifactId>
		    <version>${antlr.version}</version>
		</dependency>
		<dependency>
			<groupId>org.apache.logging.log4j</groupId>
			<artifactId>log4j-api</artifactId>
			<version>${log4j2.version}</version>
		</dependency>
		<dependency>
			<groupId>org.apache.logging.log4j</groupId>
			<artifactId>log4j-core</artifactId>
			<version>${log4j2.version}</version>
		</dependency>
		<dependency>
			<groupId>org.apache.logging.log4j</groupId>
			<artifactId>log4j-slf4j-impl</artifactId>
			<version>${log4j2.version}</version>
		</dependency>
		<dependency>
			<groupId>org.apache.logging.log4j</groupId>
			<artifactId>log4j-jcl</artifactId>
			<version>${log4j2.version}</version>
		</dependency>
		<dependency>
			<groupId>org.slf4j</groupId>
			<artifactId>slf4j-api</artifactId>
			<version>${slf4j.version}</version>
		</dependency>
		<dependency>
			<groupId>org.slf4j</groupId>
			<artifactId>slf4j-log4j12</artifactId>
			<version>${slf4j.version}</version>
		</dependency>
		<dependency>
			<groupId>ch.qos.logback</groupId>
			<artifactId>logback-classic</artifactId>
			<version>1.2.3</version>
			<!-- <scope>test</scope>-->
		</dependency>
		<dependency>
			<groupId>junit</groupId>
			<artifactId>junit</artifactId>
			<version>4.11</version>
			<scope>test</scope>
		</dependency>
		<dependency>
			<groupId>org.mockito</groupId>
			<artifactId>mockito-all</artifactId>
			<version>${mockito.version}</version>
			<scope>test</scope>
		</dependency>
	</dependencies>

	<build>
		<resources>
			<resource>
				<directory>src/main/resources</directory>
				<filtering>true</filtering>
			</resource>
		</resources>
		<plugins>
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-compiler-plugin</artifactId>
				<version>2.4</version>
				<configuration>
					<source>1.8</source>
					<target>1.8</target>
					<encoding>UTF-8</encoding>
				</configuration>
			</plugin>
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-surefire-plugin</artifactId>
				<version>3.0.0-M1</version>
				<configuration>
					<parallel>methods</parallel>
					<threadCount>10</threadCount>
				</configuration>
			</plugin>
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-dependency-plugin</artifactId>
				<version>2.8</version>
				<executions>
					<execution>
						<id>copy-dependencies</id>
						<phase>package</phase>
						<goals>
							<goal>copy-dependencies</goal>
						</goals>
						<configuration>
							<outputDirectory>${deploy.dir}/lib</outputDirectory>
							<overWriteReleases>false</overWriteReleases>
							<overWriteSnapshots>true</overWriteSnapshots>
							<overWriteIfNewer>true</overWriteIfNewer>
						</configuration>
					</execution>
				</executions>
			</plugin>
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-jar-plugin</artifactId>
				<version>2.4</version>
				<configuration>
					<archive>
						<!-- 打包后不包括pom的描述文件 -->
						<addMavenDescriptor>false</addMavenDescriptor>
						<!-- Maven在生成jar时，并不知道这个jar是lib还是app，所以使用以下这个插件告之MAVEN这个jar为app，指定main类 -->
						<manifest>
							<mainClass>com.kanven.record.Bootstrapper</mainClass>
						</manifest>
					</archive>
					<excludes>
						<exclude>*.properties</exclude>
						<exclude>*.xml</exclude>
						<exclude>ext/**/*</exclude>
						<exclude>ext</exclude>
						<exclude>*/*.bat</exclude>
						<exclude>*/*.sh</exclude>
						<exclude>*/**/*.xml</exclude>
						<exclude>antlr4/*</exclude>
					</excludes>
				</configuration>
				<!-- 打jar包时需要把配置文件给排除在外 -->
				<executions>
					<execution>
						<phase>package</phase>
						<goals>
							<goal>jar</goal>
						</goals>
						<!-- 考虑不要把配置文件信息打包到jar文件里,这样就可以只修改配置文件,不用修改到jar,部署时相对灵活一些 -->
						<configuration>
							<outputDirectory>${deploy.dir}/lib</outputDirectory>
							<skipIfEmpty>true</skipIfEmpty>
						</configuration>
					</execution>
				</executions>
			</plugin>
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-resources-plugin</artifactId>
				<version>2.5</version>
				<executions>
					<execution>
						<id>conf-resources</id>
						<phase>package</phase>
						<goals>
							<goal>copy-resources</goal>
						</goals>
						<configuration>
							<encoding>UTF-8</encoding>
							<!-- 这是目标地址目录, 将编译完后的资源文件拷贝到该 目录 下 -->
							<outputDirectory>${deploy.dir}/conf</outputDirectory>
							<resources>
								<resource>
									<!-- 待拷贝的资源文件源地址 -->
									<directory>src/main/resources/</directory>
									<!-- 可以设定拷贝规则,哪些需要操作，哪些不操作 -->
									<includes>
										<include>ext/**/*.properties</include>
										<include>*.properties</include>
										<include>log4j2.xml</include>
									</includes>
									<filtering>true</filtering>
								</resource>
							</resources>
						</configuration>
					</execution>
					<execution>
						<id>bin-resources</id>
						<phase>package</phase>
						<goals>
							<goal>copy-resources</goal>
						</goals>
						<configuration>
							<encoding>UTF-8</encoding>
							<!-- 这是目标地址目录, 将编译完后的资源文件拷贝到该 目录 下 -->
							<outputDirectory>${deploy.dir}/bin</outputDirectory>
							<resources>
								<resource>
									<!-- 待拷贝的资源文件源地址 -->
									<directory>${basedir}/src/main/bin/</directory>
									<!-- 可以设定拷贝规则,哪些需要操作，哪些不操作 -->
									<includes>
										<include>*.sh</include>
										<include>*.bat</include>
									</includes>
									<filtering>true</filtering>
								</resource>
							</resources>
						</configuration>
					</execution>
				</executions>
			</plugin>
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-assembly-plugin</artifactId>
				<version>2.2.1</version>
				<configuration>
					<descriptors>
						<descriptor>${basedir}/src/main/assembly.xml</descriptor>
					</descriptors>
					<appendAssemblyId>false</appendAssemblyId>
				</configuration>
				<executions>
					<execution>
						<id>make-package</id>
						<phase>package</phase>
						<goals>
							<goal>single</goal>
						</goals>
					</execution>
				</executions>
			</plugin>
		</plugins>
	</build>
	
	<profiles>
		<profile>
			<id>dev</id>
			<properties>
				<log.dir>${basedir}</log.dir>
			</properties>
			<activation>
                <activeByDefault>true</activeByDefault>
            </activation>
		</profile>
		<profile>
			<id>prd</id>
			<properties>
				<log.dir>/app/applogs</log.dir>
			</properties>
		</profile>
	</profiles>
	

</project>
